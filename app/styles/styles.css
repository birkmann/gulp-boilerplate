html {
  margin: 0;
  padding: 0;
  border: 0; }

body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, code, del, dfn, em, img, q, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, dialog, figure, footer, header, hgroup, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
  font-weight: inherit;
  font-style: inherit;
  font-size: 100%;
  font-family: inherit;
  vertical-align: baseline; }

article, aside, dialog, figure, footer, header, hgroup, nav, section {
  display: block; }

body {
  line-height: 1.5;
  background: white; }

table {
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  float: none !important; }

table, th, td {
  vertical-align: middle; }

blockquote before, blockquote after, q before, q after {
  content: ''; }

a img {
  border: none; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  outline: 0 none; }

body {
  font: normal 17px/1.6em sans-serif;
  -webkit-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  overflow-y: scroll; }

h1 {
  font-size: 2em;
  margin: 5px 0 15px; }

h2 {
  font-size: 1.75em;
  margin: 5px 0 15px; }

h3 {
  font-size: 1.5em;
  margin: 5px 0 15px; }

.img-r {
  width: 100%;
  height: auto; }

img.circle {
  border-radius: 100%; }

.center {
  text-align: center; }

.wrapper {
  max-width: 1140px;
  margin: 0 auto;
  padding: 0 15px; }

.container {
  max-width: 1140px;
  margin-left: auto;
  margin-right: auto;
  /* height: 100vh; */ }
  .container:after {
    content: " ";
    display: block;
    clear: both; }

.row {
  zoom: 1; }
  .row:before, .row:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .row:after {
    clear: both; }
  @media (min-width: 64em) {
    .row .col-6 {
      width: 49.15254%;
      float: left;
      margin-right: 1.69492%; } }
  @media (min-width: 64em) {
    .row .col-6:last-child {
      width: 49.15254%;
      float: right;
      margin-right: 0; } }
  @media (min-width: 64em) {
    .row .col-6.last-child {
      width: 49.15254%;
      float: right;
      margin-right: 0; } }

.header-main {
  background: #fff;
  -webkit-box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);
          box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);
  color: #333;
  padding: 10px 0; }
  .header-main a {
    color: #333;
    text-decoration: none; }
  .header-main li {
    list-style: none; }
  .header-main .container {
    max-width: 1600px;
    padding: 0 15px; }
  .header-main .logo {
    width: 100px;
    display: block; }
    @media (min-width: 64em) {
      .header-main .logo {
        width: 213px;
        float: left; } }
    .header-main .logo img {
      width: 100%;
      height: auto; }
  @media (min-width: 64em) {
    .header-main .right {
      float: right;
      text-align: right;
      margin-top: 18px; } }
  .header-main .tel {
    font-size: 1.5em;
    color: #e7480e;
    font-weight: bold;
    display: block;
    text-align: center; }
    @media (min-width: 64em) {
      .header-main .tel {
        display: inline;
        text-align: left; } }

.nav-main ul {
  zoom: 1; }
  .nav-main ul:before, .nav-main ul:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .nav-main ul:after {
    clear: both; }
  .nav-main ul li {
    text-align: center; }
    @media (min-width: 64em) {
      .nav-main ul li {
        float: left; } }
    .nav-main ul li a {
      display: block;
      padding: 10px; }
      @media (min-width: 64em) {
        .nav-main ul li a {
          padding: 10px 30px;
          font-weight: bold; }
          .nav-main ul li a:last-child {
            padding-right: 0; }
          .nav-main ul li a:hover {
            color: #e7480e; } }

.emotion {
  position: relative;
  /*
	max-height: 650px;
	overflow: hidden;
	*/
  background: #000; }
  .emotion .text {
    z-index: 1;
    bottom: 20%;
    color: #fff;
    padding: 10px; }
    @media (min-width: 64em) {
      .emotion .text {
        position: absolute; } }
    .emotion .text h2, .emotion .text h3 {
      background: #000;
      background: rgba(0, 0, 0, 0.75);
      display: inline-block;
      margin: 0; }
    @media (min-width: 64em) {
      .emotion .text h2 {
        font-size: 1.75em;
        padding: 12px 15px; } }
    @media (min-width: 64em) {
      .emotion .text h3 {
        padding: 10px 15px;
        font-size: 1.25em; } }
  .emotion .pic {
    position: relative;
    z-index: 0; }
    .emotion .pic img {
      width: 100%;
      display: block; }

.intro {
  background: #e7480e;
  color: #fff;
  text-align: center;
  padding: 20px 0; }
  @media (min-width: 64em) {
    .intro {
      padding: 15px 0; } }
  .intro iframe {
    width: 100%;
    max-width: 850px;
    position: relative;
    z-index: 100; }
    @media (min-width: 64em) {
      .intro iframe {
        margin-bottom: -75px; } }
  @media (min-width: 64em) {
    .intro h2 {
      font-size: 1.5em;
      margin: 15px 0 25px; } }

.animated {
  zoom: 1;
  position: relative;
  padding: 0 20px;
  margin: 0 auto; }
  .animated:before, .animated:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .animated:after {
    clear: both; }
  @media (min-width: 64em) {
    .animated {
      height: 1445px;
      background: url("../images/animated-bg.png") center top no-repeat; }
      .animated .container {
        position: relative;
        max-width: 1200px;
        margin: 0 auto; } }
  @media (min-width: 64em) {
    .animated .box {
      max-width: 400px;
      position: absolute; }
      .animated .box.border {
        background: #fff;
        padding: 20px;
        -webkit-box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);
                box-shadow: 0 0 8px rgba(0, 0, 0, 0.15); }
      .animated .box.top-left {
        top: 170px;
        left: 0; }
      .animated .box.top-right {
        top: 400px;
        right: 0; }
      .animated .box.bottom-left {
        top: 900px;
        left: 0; }
      .animated .box.bottom-right {
        top: 1080px;
        right: 0; } }
  .animated .box h3 {
    color: #ff4a00;
    text-transform: uppercase;
    margin: 5px 0 10px; }
    @media (min-width: 64em) {
      .animated .box h3 {
        font-size: 1.25em; } }
  .animated .box a {
    color: #ff4a00;
    text-decoration: none; }
    .animated .box a:hover {
      text-decoration: underline; }

.teaser-bottom {
  margin-bottom: 50px; }
  .teaser-bottom .box {
    border: 8px solid #ff4a00;
    padding: 20px;
    font-family: 'Oswald', sans-serif;
    font-weight: bold;
    max-width: 900px;
    margin: 0 auto;
    text-align: center;
    color: #333;
    text-transform: uppercase; }
    .teaser-bottom .box h3 {
      font-size: 2em;
      line-height: 1.1em;
      margin: 0; }

section.orange {
  background: #ff4a00;
  color: #fff;
  padding: 50px 0;
  text-align: center;
  font-size: 1.2em; }

section.customers {
  padding: 50px 0;
  background: #f5f5f5;
  color: #888; }
  section.customers h3 {
    margin: 18px 0 40px;
    font-size: 1.35em; }
  section.customers p {
    margin: 25px 0 0; }
  section.customers .img-container {
    zoom: 1; }
    section.customers .img-container:before, section.customers .img-container:after {
      content: "\0020";
      display: block;
      height: 0;
      overflow: hidden; }
    section.customers .img-container:after {
      clear: both; }
  section.customers .img-wrapper {
    background: #fff;
    height: 150px;
    width: 50%;
    display: block;
    float: left; }
    @media (min-width: 64em) {
      section.customers .img-wrapper {
        height: 200px;
        width: 24%;
        margin: 0.25%; } }
    section.customers .img-wrapper img {
      display: block;
      margin: 0 auto;
      max-width: 100%;
      height: auto; }

@media (min-width: 64em) {
  section.cite .left {
    width: 57.62712%;
    float: left;
    margin-right: 1.69492%; } }
@media (min-width: 64em) {
  section.cite .right {
    width: 40.67797%;
    float: right;
    margin-right: 0; } }
section.cite .right a.tel {
  color: #fff;
  text-decoration: none; }

.footer-main {
  color: #6f6f6f;
  text-align: center; }
  .footer-main a {
    color: #6f6f6f;
    text-decoration: none; }
    .footer-main a:hover {
      color: #fff; }
  .footer-main li {
    list-style: none; }
  .footer-main .top {
    background: #35383e; }
  .footer-main .bottom {
    background: #2a2d30; }
    .footer-main .bottom li {
      display: inline; }
      .footer-main .bottom li a {
        padding: 10px;
        display: inline-block; }


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
